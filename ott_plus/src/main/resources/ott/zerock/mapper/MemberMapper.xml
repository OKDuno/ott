<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ott.zerock.mapper.MemberMapper">

	<!-- 회원가입 -->
	<insert id="register">
	    INSERT INTO MP_MEMBER(   USERID 
	   					       , USERPASS 
	   					       , USERNAME 	)
	                  VALUES(    #{userId} 
	                 		   , #{userPass}
	                 		   , #{userName})
   
    </insert>
    
  
	<!-- 비밀번호를 체크할때 입력된 비밀번호와 
	암호화된 비밀번호를 비교해주기 때문에 
	 조건에 있는 비밀번호를 주석처리 해줍니다. -->
	    
    <!-- 로그인 -->
	<select id="login" resultType="ott.zerock.domain.MemberVO">
		SELECT USERID, USERPASS, USERNAME
		  FROM MP_MEMBER
		 WHERE USERID = #{userId}
		 <!--  AND USERPASS = #{userPass} -->
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="memberUpdate">
		UPDATE MP_MEMBER SET 
		<!-- USERPASS = #{userPass}, -->
		USERNAME = #{userName}
		WHERE USERID = #{userId}
	</update>
	
	<!-- 회원탈퇴 -->
	<delete id="memberDelete">
		DELETE FROM MP_MEMBER
		WHERE USERID = #{userId}
		 <!--  AND USERPASS = #{userPass} --> 
	</delete>
	
	<!-- 패스워드 체크 -->
	<select id="passChk" resultType="int">
		SELECT COUNT(*) FROM MP_MEMBER
		WHERE USERID = #{userId}
		  AND USERPASS = #{userPass}
	</select>
	
	<!-- 아이디 중복 체크 -->
	<select id="idChk" resultType="int">
		SELECT COUNT(*) FROM MP_MEMBER
		WHERE USERID = #{userId}
	</select>

<!--  	<resultMap type="MemberVO" id="userInfo">
		<result property="userID" column=""
	</resultMap> -->
<!-- 	<select id="myReview" resultMap="userInfo">
			
	</select> -->
	 
	<!-- 게시글 검색(공유/자유만) -->

<!-- 	<select id="myReview" resultType="ott.zerock.domain.BoardVO">
		SELECT * FROM board, review
		WHERE writer = #{userId}
	</select>   -->

<!-- 	<resultMap type="ott.zerock.domain.ReviewVO" id="reviewMap"> -->
<!-- 		<result property="rev_bno" column="rev_bno" /> -->
<!-- 		<result property="rev_teg" column="rev_teg" /> -->
<!-- 		<result property="rev_title" column="rev_title" /> -->
<!-- 		<result property="rev_content" column="rev_content" /> -->
<!-- 		<result property="rev_writer" column="rev_writer" /> -->
<!-- 		<result property="rev_regdate" column="rev_regdate" /> -->
<!-- 	</resultMap> -->
	
<!-- 	<resultMap type="ott.zerock.domain.BoardVO" id="boardMap"> -->
<!-- 		<result property="bno" column="bno" /> -->
<!-- 		<result property="teg" column="teg" /> -->
<!-- 		<result property="title" column="title" /> -->
<!-- 		<result property="content" column="content" /> -->
<!-- 		<result property="writer" column="writer" /> -->
<!-- 		<result property="regdate" column="regdate" /> -->
<!-- 		<collection property="reviewMap" resultMap="ott.zerock.domain.ReviewVO" /> -->
<!-- 	</resultMap>	 -->
	
	<select id="myReview" resultType="ott.zerock.domain.BoardVO">
		SELECT bno, teg, title, writer, regdate FROM
		(select bno bno, teg teg, title title, writer writer, regdate regdate FROM board where writer = #{userId}
		UNION ALL
		select rev_bno bno, rev_teg teg, rev_title title, rev_writer writer, rev_regdate regdate FROM review where rev_writer = #{userId})
		order by regdate desc
	</select>

	
<!-- 	<select id ="myReview" resultMap="ott.zerock.domain.BoardVO" parameterType="ott.zerock.domain.BoardVO"> -->
<!-- 		SELECT bno, teg, title, writer, regdate FROM -->
<!-- 		(select bno bno, teg teg, title title, writer writer, regdate regdate FROM board where writer = #{userId} -->
<!-- 		UNION ALL -->
<!-- 		select rev_bno bno, rev_teg teg, rev_title title, rev_writer writer, rev_regdate regdate FROM review where rev_writer = #{userId}) -->
<!-- 		order by regdate desc; -->
<!-- 	</select> -->
	
 	<!-- 영화 목록보기 -->
 	<select id="getList" resultType="ott.zerock.domain.MovieVO">
		select *
		from movie
		where userId= #{userId}
		order by movie_title desc
	</select>


	
</mapper>